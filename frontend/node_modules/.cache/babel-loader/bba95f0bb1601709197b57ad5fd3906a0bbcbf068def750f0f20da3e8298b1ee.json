{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\CascadeProjects\\\\restaurant-delivery-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { API_URL } from '../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is authenticated on app load\n  const checkAuthState = useCallback(async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Check if it's a user token or admin token\n      const adminToken = localStorage.getItem('adminToken');\n      if (adminToken) {\n        // Verify admin token with backend\n        const response = await axios.get(`${API_URL}/api/admin/profile`, {\n          headers: {\n            Authorization: `Bearer ${adminToken}`\n          }\n        });\n        if (response.data) {\n          setAdmin(response.data);\n        }\n      } else {\n        // Verify user token with backend\n        const response = await axios.get(`${API_URL}/api/users/profile`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data) {\n          setUser(response.data);\n        }\n      }\n    } catch (error) {\n      console.error('Auth state verification error:', error);\n      localStorage.removeItem('token');\n      localStorage.removeItem('adminToken');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // User login\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/users/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        ...userData\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(userData);\n      toast.success('Login successful!');\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // User registration\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/users/register`, userData);\n      const {\n        token,\n        ...newUserData\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(newUserData);\n      toast.success('Registration successful!');\n      return newUserData;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Admin login\n  const adminLogin = async (username, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/admin/login`, {\n        username,\n        password\n      });\n      const {\n        token,\n        ...adminData\n      } = response.data;\n      localStorage.setItem('adminToken', token);\n      setAdmin(adminData);\n      toast.success('Admin login successful!');\n      return adminData;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Admin login failed. Please try again.';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('adminToken');\n    setUser(null);\n    setAdmin(null);\n    toast.info('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/api/users/profile`, profileData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(prev => ({\n        ...prev,\n        ...response.data\n      }));\n      toast.success('Profile updated successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update profile. Please try again.';\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Upload profile photo\n  const uploadProfilePhoto = async photoFile => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const formData = new FormData();\n      formData.append('photo', photoFile);\n      const response = await axios.post(`${API_URL}/api/users/profile/photo`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUser(prev => ({\n        ...prev,\n        profilePhoto: response.data.profilePhoto\n      }));\n      toast.success('Profile photo updated successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to upload photo. Please try again.';\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    admin,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    isAdmin: !!admin,\n    login,\n    register,\n    adminLogin,\n    logout,\n    updateProfile,\n    uploadProfilePhoto,\n    checkAuthState\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vNtvppd389T3SMCV5Bs9gKNp04E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","axios","toast","API_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","admin","setAdmin","loading","setLoading","error","setError","checkAuthState","token","localStorage","getItem","adminToken","response","get","headers","Authorization","data","console","removeItem","login","email","password","post","userData","setItem","success","_error$response","_error$response$data","message","register","newUserData","_error$response2","_error$response2$data","adminLogin","username","adminData","_error$response3","_error$response3$data","logout","info","updateProfile","profileData","put","prev","_error$response4","_error$response4$data","uploadProfilePhoto","photoFile","formData","FormData","append","profilePhoto","_error$response5","_error$response5$data","value","isAuthenticated","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/CascadeProjects/restaurant-delivery-app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { API_URL } from '../config/constants';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is authenticated on app load\n  const checkAuthState = useCallback(async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Check if it's a user token or admin token\n      const adminToken = localStorage.getItem('adminToken');\n\n      if (adminToken) {\n        // Verify admin token with backend\n        const response = await axios.get(`${API_URL}/api/admin/profile`, {\n          headers: { Authorization: `Bearer ${adminToken}` }\n        });\n        \n        if (response.data) {\n          setAdmin(response.data);\n        }\n      } else {\n        // Verify user token with backend\n        const response = await axios.get(`${API_URL}/api/users/profile`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (response.data) {\n          setUser(response.data);\n        }\n      }\n    } catch (error) {\n      console.error('Auth state verification error:', error);\n      localStorage.removeItem('token');\n      localStorage.removeItem('adminToken');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // User login\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/users/login`, { email, password });\n      \n      const { token, ...userData } = response.data;\n      \n      localStorage.setItem('token', token);\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return userData;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed. Please try again.';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // User registration\n  const register = async (userData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/users/register`, userData);\n      \n      const { token, ...newUserData } = response.data;\n      \n      localStorage.setItem('token', token);\n      setUser(newUserData);\n      \n      toast.success('Registration successful!');\n      return newUserData;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed. Please try again.';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Admin login\n  const adminLogin = async (username, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/admin/login`, { username, password });\n      \n      const { token, ...adminData } = response.data;\n      \n      localStorage.setItem('adminToken', token);\n      setAdmin(adminData);\n      \n      toast.success('Admin login successful!');\n      return adminData;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Admin login failed. Please try again.';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('adminToken');\n    setUser(null);\n    setAdmin(null);\n    toast.info('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async (profileData) => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.put(\n        `${API_URL}/api/users/profile`, \n        profileData,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n      setUser(prev => ({ ...prev, ...response.data }));\n      toast.success('Profile updated successfully!');\n      return response.data;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to update profile. Please try again.';\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Upload profile photo\n  const uploadProfilePhoto = async (photoFile) => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      \n      const formData = new FormData();\n      formData.append('photo', photoFile);\n      \n      const response = await axios.post(\n        `${API_URL}/api/users/profile/photo`, \n        formData,\n        { \n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          } \n        }\n      );\n      \n      setUser(prev => ({ ...prev, profilePhoto: response.data.profilePhoto }));\n      toast.success('Profile photo updated successfully!');\n      return response.data;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to upload photo. Please try again.';\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    admin,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    isAdmin: !!admin,\n    login,\n    register,\n    adminLogin,\n    logout,\n    updateProfile,\n    uploadProfilePhoto,\n    checkAuthState\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}